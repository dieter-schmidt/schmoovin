%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 0a4f4abcda999cd4b8254e506b70e10f, type: 3}
  m_Name: Update_v1_1_12
  m_EditorClassIdentifier: 
  version: 1112
  sections:
  - image: {fileID: 0}
    h2Heading: 
    h3Heading: New Features
    bulletPoints:
    - New wieldable tools system (code only - no demo art included currently)
    - Grapple-swing motion graph state
    - Add force and record velocity motion graph behaviours
    - New HeadBobV2 head bob system with crosshair centering and bob strength sliders
      in game options
    - Character velocity based weapon sway
    - ParticleToRigidbodyShellEjector uses particle system while in view, swapping
      particles for rigidbodies after
    text: 1.1.12 adds a new wieldable tools system alongside the firearms and melee/thrown
      weapons. Tools have primary and secondary fire, and a range of actions / modules
      available including healing, grapple hook, animation, audio and unity events.
      The system is currently in place, but the demo artwork has not been added yet.
    links: []
    highlightObjects: []
    actions: []
  - image: {fileID: 0}
    h2Heading: 
    h3Heading: Component Changes
    bulletPoints:
    - Explosion damage handling has been reworked. You will need to tweak your settings
      to compensate
    - The SurfaceBulletPhysicsAmmoEffect will now behave modify projectile speed slightly
      differently on penetration
    - Firearm ejected shell casings now move slightly differently
    - Demo characters now lower weapons when swimming or climbing ladders
    text: 
    links: []
    highlightObjects: []
    actions: []
  - image: {fileID: 0}
    h2Heading: 
    h3Heading: Script Changes
    bulletPoints:
    - IThrownWeapon interface has changed to add wielder property
    - IProjectile interface and all projectiles have added a "wait 1 frame" parameter
      to the fire method that prevents the projectile appearing as far in front of
      the gun, but it will lag behind character interpolation
    - IProjectile now requires an onHit C# event
    - ToggleOrHold helper class now works differently (blocking callback instead of
      reference counters)
    text: 
    links: []
    highlightObjects: []
    actions: []
